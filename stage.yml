version: '3'

volumes:
  production_postgres_data: {}
  production_postgres_data_backups: {}
  apps_staticfiles: {}
  apps_mediafiles: {}
  production_traefik: {}

services:
  django: &django
    build:
      context: .
      dockerfile: ./compose/production/django/Dockerfile

    image: apps_production_django
    depends_on:
      - postgres
      - redis
    volumes:
      - apps_staticfiles:/app/staticfiles
      - apps_mediafiles:/app/media
    env_file:
      - ./.envs/.stage/.django
      - ./.envs/.stage/.postgres
    command: /start

  postgres:
    build:
      context: .
      dockerfile: ./compose/production/postgres/Dockerfile
    image: apps_production_postgres
    volumes:
      - production_postgres_data:/var/lib/postgresql/data
      - production_postgres_data_backups:/backups
    env_file:
      - ./.envs/.stage/.postgres

  redis:
    image: redis:6

  celeryworker:
    <<: *django
    image: apps_production_celeryworker
    command: /start-celeryworker

  celerybeat:
    <<: *django
    image: apps_production_celerybeat
    command: /start-celerybeat

  flower:
    <<: *django
    image: apps_production_flower
    command: /start-flower

  caddy:
      image: caddy:2.7-alpine
      ports:
        - 80:80
        - 9443:443
        - 5555:5555
      volumes:
        - ./conf/Caddyfile:/etc/caddy/Caddyfile:ro
        - ./conf/certs:/certs
      restart: unless-stopped
      container_name: django_apps_caddy
  # awscli:
  #   build:
  #     context: .
  #     dockerfile: ./compose/production/aws/Dockerfile
  #   env_file:
  #     - ./.envs/.stage/.django
  #   volumes:
  #     - production_postgres_data_backups:/backups:z
